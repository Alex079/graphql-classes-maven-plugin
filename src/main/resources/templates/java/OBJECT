//CHECKSTYLE:OFF
<#macro m_check_null input>
        <#switch input.flag>
        <#case 'MANDATORY'>
        .map(Objects::requireNonNull)
        <@m_check_null input.nested/>
        <#break>
        <#case 'LIST'>
        .flatMap(Collection::stream)
        <@m_check_null input.nested/>
        <#break>
        </#switch>
</#macro>
package ${typesPackage};

<#list importPackages as i>
import ${i}.*;
</#list>

@SuppressWarnings({"all", "PMD"})
public class ${name}
<#if 0 < members?size>
implements ${members?join(", ")}
</#if>
{

	<#list fields as f>
	<#if jsonProperty?has_content>@${jsonProperty}("${f.name}")</#if>
	private <#if scalars?seq_contains(f.type.full)>String<#else>${f.type.full}</#if> ${f.name}<#if jsonProperty?has_content>__</#if>;

	public <#if useChainedAccessors>${name}<#else>void</#if> set${f.name?cap_first}(${f.type.full} v) {
        java.util.stream.Stream.of(v)
        <@m_check_null f.type/>
        .forEach(($) -> {});
		this.${f.name}<#if jsonProperty?has_content>__</#if> = <#if scalars?seq_contains(f.type.full)>v == null ? null : v.toString()<#else>v</#if>;<#if useChainedAccessors>
		return this;</#if>
	}

	</#list>
}
//CHECKSTYLE:ON
