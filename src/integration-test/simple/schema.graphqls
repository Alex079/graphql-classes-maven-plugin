directive @string on SCALAR
directive @currentDate on FIELD_DEFINITION

scalar Address @string

type Item {
	id: ID!
	price: Float!
	quantity: Int!
}

type Location {
	id: ID!
	address: Address!
	shelf: Int!
}

type EmptyType {
	# it must define fields but it doesn't and still can work
}

interface Locatable {
	from: Location!
}

interface TrackedFromTo implements Locatable{
	from: Location!
	toAddress: Address!
}

interface TimedFromTo {
	fromDate: DateTime!
	toDate: DateTime!
}

type Track implements TrackedFromTo & TimedFromTo & Locatable {
	id: ID!
	itemId: ID!
	from: Location!
	fromDate: DateTime!
	toAddress: Address!
	toDate: DateTime!
	delivered: Boolean!
	notes: String
}

scalar DateTime

enum PaymentType {
	CARD
	CASH
	CHEQUE
	OTHER
}

union LocationOrTrack = Location

extend union LocationOrTrack = Track

input SoldItem {
	item: ID!
	paidWith: PaymentType!
	track: ID!
}

type Query {
	itemsInDelivery(paidWith: PaymentType): [Item!]!
	trackingInfo(itemId: ID!): Track
	trackingInfoConnection(itemId: ID! first: Int after: String): TrackConnection @connection(for:"Track")
}

type Mutation {
	delivered(item: SoldItem!): Track! @currentDate
}

{
	itemsInDelivery {
		...ItemFragment
	}
}
