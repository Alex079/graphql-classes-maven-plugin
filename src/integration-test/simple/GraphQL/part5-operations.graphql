
{
    field1(arg2: []) @include(if: true) {
        idA
        id
    }
    field1(arg2: []) @skip(if: true) {
        idB
        id
    }
    field2(arg2: []) {
        edges { node { ...on Type1UnionField2 { cl:switch { ...TreeNodeLeftFragment ...TreeNodeRightFragment value } } } }
    }
}

fragment TreeNodeFragment on TreeNode {
    ...TreeNodeLeftFragment ...TreeNodeRightFragment
}

fragment TreeNodeLeftFragment on TreeNode {
    left {
        ...TreeNodeFragment
    }
    left {
        value
        ...EmptyLoop1
    }
}

fragment EmptyLoop1 on TreeNode {
    ...EmptyLoop2
}

fragment EmptyLoop2 on TreeNode {
    ...EmptyLoop1
}

fragment TreeNodeRightFragment on TreeNode {
    right {
        ...TreeNodeFragment
    }
}

fragment ValueFragment on Type1MutationField2 {
    t1Value: value
}

fragment ValueFragment on Type2MutationField2 {
    t2Value: value {
        ...ValueFragment
    }
}

fragment ValueFragment on Type3MutationField2 {
    t3Value: value
}

mutation updateField2($id: [ID!]! = ["0"]) {
    field2(arg1: $id) {
        id name
        ...on Type2MutationField2 {
            ...ValueFragment
        }
        ... on Type1MutationField2 {
            ...ValueFragment
        }
    }
}
